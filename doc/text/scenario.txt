# -*- org -*-
#+STARTUP: overview
#+STARTUP: hidestars

* 導入研修

研修でやることの説明をする。↓のリストを読んでやることの説明をする。全
体の流れを説明する。

  - 「リーダブルコードの解説」を読む (10分)
    http://www.clear-code.com/blog/2012/6/11.html

「リーダブルコードの解説」を読むことで須藤が考える「リーダブルコードを
書くために必要なこと」を知ってもらいます。

  - 「リーダブルコードの解説」の解説 (5分)

「リーダブルコードの解説」を書いた時点と現在では、須藤の考え方も変わっ
ているため、考え方の変わった部分について説明します。

  - 「Ruby コードの感想戦 【第 1 回】 WikiR」を読む (20分)
    http://jp.rubyist.net/magazine/?0040-CodePostMortem

他の人がどんな読み方をするのか知っておくと、コードを読むときの視点が増
えるので、その一例として須藤の読み方を知ってもらいます。

  - 「Ruby コードの感想戦 【第 1 回】 WikiR」の解説 (5分)

須藤がどういう読み方をしていたのか簡単に解説したあと、参加者のみなさん
に普段どのようにしてコードを読んでいるのか聞きます。

そのあと、講師の読み方を説明します。

  - 実際にやってもらう (10分)

1人ずつ2,3分くらいで実際にコミットメールを読んでもらいます。
1人がやっている間、他の人はその人の周りに集ります。

  - 感想を聞く (10分)

やってもらった感想を聞く。

  - コメントの仕方 (5分)

どういう点に注意してコメントをするのか説明します。

  - まとめ (5分)

** 「リーダブルコードの解説」を読む (10分)

「リーダブルコードの解説」を10分くらいで読んでください。
http://www.clear-code.com/blog/2012/6/11.html

「リーダブルコードの解説 ククログ」でぐぐると一番上に表示されます。

リーダブルコードの解説にはリーダブルなコードを継続的に書くために必要な
ことが書いてあります。また、リーダブルなコードを書くことを始めたばかり
の頃に困りそうなことも書いてあります。


(大きめの字で印刷して配ってもいいかも)

** 「リーダブルコードの解説」の解説 (5分)

「リーダブルコードの解説」には、まず自分がリーダブルなコードを書くんだ
というようなことが書かれていますが、普通の人はいきなりリーダブルないい
コードを書くことはできません。なぜなら、いいコードを読んだ経験がないか
らです。いいコードを読んだ経験がないと、いいコードを書くことは難しいの
で、まずはコードを読む習慣をつける必要があります。

いいコードは読みやすく、コミットメールに載っている差分だけ読んでも書い
た人の意図が理解できるものです。一方、よくないコードは、コミットメール
に載っている差分だけ読んでも、よくないコードであることがわかることが多
いです。なぜなら、よくないコードは何かしら「歪み」や「臭い」を持ってい
るからです。

コミットメールを読んで、読みやすいと思ったコミットやいい書き方をしてい
るなと思ったコミットは書き方を真似て、自分のコミットに取り入れてくださ
い。そのコミットに使われていた書き方を使うと、真似された方は真似されて
いることに気付きます。同じ書き方を使ったコミットが増えるとまわりの人も
気付いて真似するので、いいコードが広まるという流れになればいいと思って
います。

そして、コミットへのコメントサービスでは、コミットメールを読む習慣作り
の最初の一歩目をお手伝いします。


** 「Ruby コードの感想戦 【第 1 回】 WikiR」を読む (20分)

「Ruby コードの感想戦 【第 1 回】 WikiR」を10分くらいで読んでください。
http://jp.rubyist.net/magazine/?0040-CodePostMortem

他の人がどんな読み方をするのか知っておくことは重要です。なぜなら、コー
ドを読むときの視点が増えるからです。コードを読むときの視点が増えると、
視野が広くなり、自分がコードを書くときの引き出しが増えます。他の人のコー
ドの読み方の一例として須藤がコードを読むときにどんなことを考えながら読
んでいるかを知ってもらいます。

Rubyの機能やライブラリの説明が何ヶ所かありますが、その部分は「ふーん、
そうなのか」程度で流し読みしてもらって大丈夫です。

(大きめの字で印刷して配ってもいいかも)

** 「Ruby コードの感想戦 【第 1 回】 WikiR」の解説 (5分)

須藤の読み方は、書いた人の意図を想像しながら読むというものでした。しか
し、中にはあまり意図などなく書いている人もいます。

普段、どのようにしてコードやコミットメールを読んでいますか？
(順番に聞いていく)
(今後に活かすため、記録する)

講師のコミットメールの読み方を説明します。

  - コミットログを読む
  - コミットの内容とコミットログの内容が一致しているか確認する
  - 一致していないときは注意して読む
  - 一致しているときは、流し読みする
  - あんまり難しいことは考えない
  - 間違いを見つける意識では読まない

あと、自分にとって重要なプロジェクトかどうかで変わります。

** 実際にやってもらう (15分)

# 具体的な案はないが、毎回初見のコミットメールを用意するのは大変かも。
# 他の導入先のコードは初見のはずなので特に問題ないか

対象プロジェクトのコミットのうちそのときの最新10から20コミットくらいでやる。

- 自分がやる(3分)
- 1人3分でやってもらう(10分)

もっと長い時間やったときは記録も付けてもらう

- 記録を付けてもらう(2分)
  - 読んだ割合(ざっくり)、印象に残ったコミット

** 感想を聞く (10分)

それぞれの人に感想を聞く。

- 読んでみてどうだった？
- 気になったことは？

(感想など聞いた話は次に活かすために記録する)

** コメントする方法を説明する (5分)

- 場所。気になったのはどこかを書く。
- 理由。なぜ気になったのか。○○だから読みにくい。理由がなければ無いこ
  とを書く。
- 改善案。改善案があるかないか。改善案があればそれを書く、改善案がなけ
  れば無いことを書く。

** まとめ (5分)

例えば、コミットメールを読むのに使う時間は一日30分までと決めると、時間
を使い過ぎることはなくなるので、試してほしいです。徐々にコミットされる
コードが読みやすくなってくれば、読めるコミットメールの数や割合が増えて
くると思います。

質問はありますか？

他に気になることはないですか？

(何度か質問を繰り返して、疑問点を出してもらってできるかぎり解消しておく。)
(また、出てきた質問と回答はメモを取っておいて、次回以降に活かす。)
